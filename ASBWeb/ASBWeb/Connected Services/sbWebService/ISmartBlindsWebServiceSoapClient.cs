//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System.Threading.Tasks;
using System.Xml;

namespace ASBWeb.sbWebService
{
    public interface ISmartBlindsWebServiceSoapClient
    {
        sbWebService.BlindSettings GetBlindSettings(int SysID);
        Task<sbWebService.BlindSettings> GetBlindSettingsAsync(int SysID);
        sbWebService.BlindSettings GetBlindSettingsOBJ();
        Task<sbWebService.BlindSettings> GetBlindSettingsOBJAsync();
        XmlElement GetBlindsSettings();
        Task<XmlElement> GetBlindsSettingsAsync();
        string GetCurrentUser();
        Task<string> GetCurrentUserAsync();
        string GetXML();
        Task<string> GetXMLAsync();
        XmlElement GetXMLdetail();
        Task<XmlElement> GetXMLdetailAsync();
        string HelloWorld(string name);
        Task<sbWebService.TestHelloWorldd1> HelloWorldAsync(string name);
        void LogAllEntry(int func, string tempVal, string proxVal, string gasLog, string sbHorxLog, string sbVertLog, string sbTempAlarm);
        Task LogAllEntryAsync(int func, string tempVal, string proxVal, string gasLog, string sbHorxLog, string sbVertLog, string sbTempAlarm);
        void LogEntry(int func, string val);
        Task LogEntryAsync(int func, string val);
        sbWebService.sbUsers ReturnCurrentUserSettings();
        Task<sbWebService.sbUsers> ReturnCurrentUserSettingsAsync();
        sbWebService.BlindSettings SetBlindSettings(int SysID);
        Task<sbWebService.BlindSettings> SetBlindSettingsAsync(int SysID);
        void SetBlindsSettings(string h, string v, string t, string p, int f);
        Task SetBlindsSettingsAsync(string h, string v, string t, string p, int f);
        void SetCurrentTemp(string newTemp);
        Task SetCurrentTempAsync(string newTemp);
        string SetCurrentUser();
        Task<string> SetCurrentUserAsync();
        string UploadFile(byte[] f, string fileName);
        Task<sbWebService.UploadFileResponse> UploadFileAsync(byte[] f, string fileName);
    }
}